#!/bin/bash

# Git History Scrub Script for CodeShare
# WARNING: This script will rewrite git history. Use with extreme caution.
# Only run this on a clean working directory with no uncommitted changes.

set -e

echo "‚ö†Ô∏è  WARNING: This script will rewrite git history!"
echo "‚ö†Ô∏è  Make sure you have backups and coordinate with your team!"
echo ""
read -p "Are you sure you want to continue? (yes/no): " confirm

if [ "$confirm" != "yes" ]; then
    echo "Aborted."
    exit 1
fi

# Check for uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo "‚ùå Error: You have uncommitted changes. Please commit or stash them first."
    exit 1
fi

echo "üßπ Starting git history scrub..."

# Method 1: Using BFG Repo-Cleaner (Recommended)
# Download BFG first: https://rtyley.github.io/bfg-repo-cleaner/
# java -jar bfg.jar --delete-files "*.env*" --delete-files "application.yml" --replace-text <(echo 'JWT_SECRET==>JWT_SECRET=<CHANGED>') --replace-text <(echo 'NEXTAUTH_SECRET==>NEXTAUTH_SECRET=<CHANGED>') --replace-text <(echo 'OPENAI_API_KEY==>OPENAI_API_KEY=<CHANGED>') --replace-text <(echo 'password:.*==>password: <CHANGED>') --replace-text <(echo 'secret:.*==>secret: <CHANGED>') .

# Method 2: Using git filter-repo (Alternative)
# Install: pip install git-filter-repo

# Remove specific files
git filter-repo --path frontend/.env --path frontend/.env.local --path frontend/.env.production --invert-paths --force

# Replace secrets in remaining files
git filter-repo --replace-text <(echo 'JWT_SECRET=.*==>JWT_SECRET=<CHANGED>') --force
git filter-repo --replace-text <(echo 'NEXTAUTH_SECRET=.*==>NEXTAUTH_SECRET=<CHANGED>') --force
git filter-repo --replace-text <(echo 'OPENAI_API_KEY=.*==>OPENAI_API_KEY=<CHANGED>') --force
git filter-repo --replace-text <(echo 'password:.*==>password: <CHANGED>') --force
git filter-repo --replace-text <(echo 'secret:.*==>secret: <CHANGED>') --force

echo "‚úÖ Git history scrub completed!"

# Post-scrub checklist
echo ""
echo "üìã POST-SCRUB CHECKLIST:"
echo "1. ‚úÖ Rotate all JWT secrets in production"
echo "2. ‚úÖ Rotate database passwords"
echo "3. ‚úÖ Rotate API keys (OpenAI, Google, etc.)"
echo "4. ‚úÖ Rotate NextAuth secrets"
echo "5. ‚úÖ Re-issue all deploy tokens"
echo "6. ‚úÖ Update CI/CD secrets in GitHub Actions"
echo "7. ‚úÖ Force push to remote: git push --force-with-lease origin main"
echo "8. ‚úÖ Notify team of history rewrite"
echo "9. ‚úÖ Update any documentation with old commit hashes"
echo "10. ‚úÖ Verify all environments use new secrets"

echo ""
echo "‚ö†Ô∏è  IMPORTANT: After force-pushing, all team members must:"
echo "   git fetch origin"
echo "   git reset --hard origin/main"
echo "   (This will lose any local commits not pushed)"

echo ""
echo "üîê Security reminder:"
echo "   - Monitor for any leaked secrets in logs"
echo "   - Check third-party services for unauthorized access"
echo "   - Review access logs for suspicious activity"
